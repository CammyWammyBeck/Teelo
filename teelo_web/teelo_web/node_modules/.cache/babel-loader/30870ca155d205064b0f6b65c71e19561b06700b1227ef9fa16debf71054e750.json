{"ast":null,"code":"var _jsxFileName = \"/Users/cammybeck/Documents/TennisV3.0/Teelo/teelo_web/teelo_web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"match_id\",\n  headerName: \"Match ID\",\n  width: 130\n}, {\n  field: \"player_A\",\n  headerName: \"Player A\",\n  width: 130\n}, {\n  field: \"player_B\",\n  headerName: \"Player B\",\n  width: 130\n}, {\n  field: \"tourney_name\",\n  headerName: \"Tourney Name\",\n  width: 130\n}, {\n  field: \"tourney_level\",\n  headerName: \"Tourney Level\",\n  width: 130\n}, {\n  field: \"surface\",\n  headerName: \"Surface\",\n  width: 130\n}, {\n  field: \"round\",\n  headerName: \"Round\",\n  width: 130\n}, {\n  field: \"A_elo\",\n  headerName: \"A Elo\",\n  type: \"number\",\n  width: 130\n}, {\n  field: \"B_elo\",\n  headerName: \"B Elo\",\n  type: \"number\",\n  width: 130\n}];\nfunction App(props) {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    const params = {\n      player_name: \"PlayerName\",\n      // replace with actual player name\n      tourney_level: \"Level\",\n      // replace with actual tourney level\n      surface: \"Surface\" // replace with actual surface\n    };\n\n    axios.get(\"http://127.0.0.1:5000/matches\", {\n      params\n    }).then(response => {\n      const matches = response.data;\n      setRows(matches);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: props.rows,\n      columns: props.columns,\n      pageSize: 5,\n      getRowId: row => row.match_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","axios","jsxDEV","_jsxDEV","columns","field","headerName","width","type","App","props","_s","rows","setRows","params","player_name","tourney_level","surface","get","then","response","matches","data","style","height","children","pageSize","getRowId","row","match_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cammybeck/Documents/TennisV3.0/Teelo/teelo_web/teelo_web/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {DataGrid} from \"@mui/x-data-grid\";\nimport axios from \"axios\";\n\nconst columns = [\n  {field: \"match_id\", headerName: \"Match ID\", width: 130},\n  {field: \"player_A\", headerName: \"Player A\", width: 130},\n  {field: \"player_B\", headerName: \"Player B\", width: 130},\n  {field: \"tourney_name\", headerName: \"Tourney Name\", width: 130},\n  {field: \"tourney_level\", headerName: \"Tourney Level\", width: 130},\n  {field: \"surface\", headerName: \"Surface\", width: 130},\n  {field: \"round\", headerName: \"Round\", width: 130},\n  {field: \"A_elo\", headerName: \"A Elo\", type: \"number\", width: 130},\n  {field: \"B_elo\", headerName: \"B Elo\", type: \"number\", width: 130},\n];\n\nfunction App(props) {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    const params = {\n      player_name: \"PlayerName\", // replace with actual player name\n      tourney_level: \"Level\", // replace with actual tourney level\n      surface: \"Surface\", // replace with actual surface\n    };\n\n    axios.get(\"http://127.0.0.1:5000/matches\", {params}).then((response) => {\n      const matches = response.data;\n      setRows(matches);\n    });\n  }, []);\n\n  return (\n    <div style={{height: 400, width: \"100%\"}}>\n      <DataGrid rows={props.rows} columns={props.columns} pageSize={5} getRowId={(row) => row.match_id} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,CACd;EAACC,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvD;EAACF,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvD;EAACF,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAG,CAAC,EACvD;EAACF,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC/D;EAACF,KAAK,EAAE,eAAe;EAAEC,UAAU,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAG,CAAC,EACjE;EAACF,KAAK,EAAE,SAAS;EAAEC,UAAU,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAG,CAAC,EACrD;EAACF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAG,CAAC,EACjD;EAACF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE,OAAO;EAAEE,IAAI,EAAE,QAAQ;EAAED,KAAK,EAAE;AAAG,CAAC,EACjE;EAACF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE,OAAO;EAAEE,IAAI,EAAE,QAAQ;EAAED,KAAK,EAAE;AAAG,CAAC,CAClE;AAED,SAASE,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAG;MACbC,WAAW,EAAE,YAAY;MAAE;MAC3BC,aAAa,EAAE,OAAO;MAAE;MACxBC,OAAO,EAAE,SAAS,CAAE;IACtB,CAAC;;IAEDhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,EAAE;MAACJ;IAAM,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;MACtE,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI;MAC7BT,OAAO,CAACQ,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKoB,KAAK,EAAE;MAACC,MAAM,EAAE,GAAG;MAAEjB,KAAK,EAAE;IAAM,CAAE;IAAAkB,QAAA,eACvCtB,OAAA,CAACH,QAAQ;MAACY,IAAI,EAAEF,KAAK,CAACE,IAAK;MAACR,OAAO,EAAEM,KAAK,CAACN,OAAQ;MAACsB,QAAQ,EAAE,CAAE;MAACC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAEV;AAACtB,EAAA,CArBQF,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}